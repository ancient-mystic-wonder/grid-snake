package com.me.GridSnake;

import java.util.Stack;

import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.GL10;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Texture.TextureFilter;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.scenes.scene2d.Actor;
import com.badlogic.gdx.scenes.scene2d.Stage;

public class GridSnake implements ApplicationListener {
		
	public class SnakeBlock extends Actor {
        Texture texture = new Texture(Gdx.files.internal("data/jet.png"));
        public boolean started = false;

        public SnakeBlock(){
            setBounds(getX(),getY(),texture.getWidth(),texture.getHeight());
        }
        
        @Override
        public void draw(SpriteBatch batch, float alpha){
            batch.draw(texture,this.getX(),getY());
        }
    }
	
	public class Snake
	{
		Stack<SnakeBlock> snakeBlockStack;
		
		public Snake()
		{
			
		}
	}
	
	public class GridBox extends Actor
	{
		float x = 0;
		float y = 0;
		float width = 20;
		float height = 20;
		TextureRegion region;
		Texture texture = new Texture(Gdx.files.internal("data/libgdx.png"));
		
		public GridBox(int indexX, int indexY)
		{
			this.x = indexX*width;
			this.y = indexY*height - height;
			setBounds(this.x,this.y,this.width,this.height);
			region = new TextureRegion();
		}
		
		@Override
        public void draw(SpriteBatch batch, float alpha){
			super.draw(batch, alpha);
			Color color = getColor();
			batch.setColor(56, 56, 56, 255);
            //batch.draw(region, getX(), getY(), getOriginX(), getOriginY(),
            //        getWidth(), getHeight(), getScaleX(), getScaleY(), getRotation());
			batch.draw(texture, this.x,this.y,this.width,this.height);
        }
	}
	
	
	private Stage stage;
    
    @Override
    public void create() {        
        stage = new Stage(Gdx.graphics.getWidth(),Gdx.graphics.getHeight(),true);
        Gdx.input.setInputProcessor(stage);
        
        for(int x=0; x< 5; x++)
        {
        	GridBox newGridBox = new GridBox(x,50);
        	stage.addActor(newGridBox);
        }
        
        
    }

    @Override
    public void dispose() {
    }

    @Override
    public void render() {    
        Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
        stage.act(Gdx.graphics.getDeltaTime());
        stage.draw();
    }

    @Override
    public void resize(int width, int height) {
    }

    @Override
    public void pause() {
    }

    @Override
    public void resume() {
    }
}
